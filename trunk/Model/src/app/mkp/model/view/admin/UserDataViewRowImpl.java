package app.mkp.model.view.admin;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Oct 16 09:44:45 ICT 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class UserDataViewRowImpl extends ViewRowImpl {


    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Positions {
            public Object get(UserDataViewRowImpl obj) {
                return obj.getPositions();
            }

            public void put(UserDataViewRowImpl obj, Object value) {
                obj.setPositions((String)value);
            }
        }
        ,
        Username {
            public Object get(UserDataViewRowImpl obj) {
                return obj.getUsername();
            }

            public void put(UserDataViewRowImpl obj, Object value) {
                obj.setUsername((String)value);
            }
        }
        ,
        Displayname {
            public Object get(UserDataViewRowImpl obj) {
                return obj.getDisplayname();
            }

            public void put(UserDataViewRowImpl obj, Object value) {
                obj.setDisplayname((String)value);
            }
        }
        ,
        Company {
            public Object get(UserDataViewRowImpl obj) {
                return obj.getCompany();
            }

            public void put(UserDataViewRowImpl obj, Object value) {
                obj.setCompany((String)value);
            }
        }
        ,
        Emplid {
            public Object get(UserDataViewRowImpl obj) {
                return obj.getEmplid();
            }

            public void put(UserDataViewRowImpl obj, Object value) {
                obj.setEmplid((String)value);
            }
        }
        ,
        Departmentcode {
            public Object get(UserDataViewRowImpl obj) {
                return obj.getDepartmentcode();
            }

            public void put(UserDataViewRowImpl obj, Object value) {
                obj.setDepartmentcode((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(UserDataViewRowImpl object);

        public abstract void put(UserDataViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int POSITIONS = AttributesEnum.Positions.index();
    public static final int USERNAME = AttributesEnum.Username.index();
    public static final int DISPLAYNAME = AttributesEnum.Displayname.index();
    public static final int COMPANY = AttributesEnum.Company.index();
    public static final int EMPLID = AttributesEnum.Emplid.index();
    public static final int DEPARTMENTCODE = AttributesEnum.Departmentcode.index();

    /**
     * This is the default constructor (do not remove).
     */
    public UserDataViewRowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Positions.
     * @return the Positions
     */
    public String getPositions() {
        return (String) getAttributeInternal(POSITIONS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Positions.
     * @param value value to set the  Positions
     */
    public void setPositions(String value) {
        setAttributeInternal(POSITIONS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Username.
     * @return the Username
     */
    public String getUsername() {
        return (String) getAttributeInternal(USERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Username.
     * @param value value to set the  Username
     */
    public void setUsername(String value) {
        setAttributeInternal(USERNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Displayname.
     * @return the Displayname
     */
    public String getDisplayname() {
        return (String) getAttributeInternal(DISPLAYNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Displayname.
     * @param value value to set the  Displayname
     */
    public void setDisplayname(String value) {
        setAttributeInternal(DISPLAYNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Company.
     * @return the Company
     */
    public String getCompany() {
        return (String) getAttributeInternal(COMPANY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Company.
     * @param value value to set the  Company
     */
    public void setCompany(String value) {
        setAttributeInternal(COMPANY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Emplid.
     * @return the Emplid
     */
    public String getEmplid() {
        return (String) getAttributeInternal(EMPLID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Emplid.
     * @param value value to set the  Emplid
     */
    public void setEmplid(String value) {
        setAttributeInternal(EMPLID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Departmentcode.
     * @return the Departmentcode
     */
    public String getDepartmentcode() {
        return (String) getAttributeInternal(DEPARTMENTCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Departmentcode.
     * @param value value to set the  Departmentcode
     */
    public void setDepartmentcode(String value) {
        setAttributeInternal(DEPARTMENTCODE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


}
