package app.mkp.model.entity.bussinesrule;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed May 29 10:47:02 ICT 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class BrMainImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        BrId {
            public Object get(BrMainImpl obj) {
                return obj.getBrId();
            }

            public void put(BrMainImpl obj, Object value) {
                obj.setBrId((DBSequence)value);
            }
        }
        ,
        BrTipe {
            public Object get(BrMainImpl obj) {
                return obj.getBrTipe();
            }

            public void put(BrMainImpl obj, Object value) {
                obj.setBrTipe((String)value);
            }
        }
        ,
        BrRef {
            public Object get(BrMainImpl obj) {
                return obj.getBrRef();
            }

            public void put(BrMainImpl obj, Object value) {
                obj.setBrRef((String)value);
            }
        }
        ,
        BrDescr {
            public Object get(BrMainImpl obj) {
                return obj.getBrDescr();
            }

            public void put(BrMainImpl obj, Object value) {
                obj.setBrDescr((String)value);
            }
        }
        ,
        BrName {
            public Object get(BrMainImpl obj) {
                return obj.getBrName();
            }

            public void put(BrMainImpl obj, Object value) {
                obj.setBrName((String)value);
            }
        }
        ,
        BrAppvr {
            public Object get(BrMainImpl obj) {
                return obj.getBrAppvr();
            }

            public void put(BrMainImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(BrMainImpl object);

        public abstract void put(BrMainImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int BRID = AttributesEnum.BrId.index();
    public static final int BRTIPE = AttributesEnum.BrTipe.index();
    public static final int BRREF = AttributesEnum.BrRef.index();
    public static final int BRDESCR = AttributesEnum.BrDescr.index();
    public static final int BRNAME = AttributesEnum.BrName.index();
    public static final int BRAPPVR = AttributesEnum.BrAppvr.index();

    /**
     * This is the default constructor (do not remove).
     */
    public BrMainImpl() {
    }

    /**
     * Gets the attribute value for BrId, using the alias name BrId.
     * @return the BrId
     */
    public DBSequence getBrId() {
        return (DBSequence)getAttributeInternal(BRID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BrId.
     * @param value value to set the BrId
     */
    public void setBrId(DBSequence value) {
        setAttributeInternal(BRID, value);
    }

    /**
     * Gets the attribute value for BrTipe, using the alias name BrTipe.
     * @return the BrTipe
     */
    public String getBrTipe() {
        return (String)getAttributeInternal(BRTIPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for BrTipe.
     * @param value value to set the BrTipe
     */
    public void setBrTipe(String value) {
        setAttributeInternal(BRTIPE, value);
    }

    /**
     * Gets the attribute value for BrRef, using the alias name BrRef.
     * @return the BrRef
     */
    public String getBrRef() {
        return (String)getAttributeInternal(BRREF);
    }

    /**
     * Sets <code>value</code> as the attribute value for BrRef.
     * @param value value to set the BrRef
     */
    public void setBrRef(String value) {
        setAttributeInternal(BRREF, value);
    }

    /**
     * Gets the attribute value for BrDescr, using the alias name BrDescr.
     * @return the BrDescr
     */
    public String getBrDescr() {
        return (String)getAttributeInternal(BRDESCR);
    }

    /**
     * Sets <code>value</code> as the attribute value for BrDescr.
     * @param value value to set the BrDescr
     */
    public void setBrDescr(String value) {
        setAttributeInternal(BRDESCR, value);
    }

    /**
     * Gets the attribute value for BrName, using the alias name BrName.
     * @return the BrName
     */
    public String getBrName() {
        return (String)getAttributeInternal(BRNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for BrName.
     * @param value value to set the BrName
     */
    public void setBrName(String value) {
        setAttributeInternal(BRNAME, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getBrAppvr() {
        return (RowIterator)getAttributeInternal(BRAPPVR);
    }

    /**
     * @param brId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(DBSequence brId) {
        return new Key(new Object[]{brId});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("app.mkp.model.entity.bussinesrule.BrMain");
        }
        return mDefinitionObject;
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
     protected void create(AttributeList attributeList) {
             super.create(attributeList);
             SequenceImpl seq = new SequenceImpl("BR_SEQ", getDBTransaction());
             this.setBrId(new DBSequence(seq.getSequenceNumber()));
     }
}
