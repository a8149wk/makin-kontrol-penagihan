package app.mkp.model.entity.notification.config;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Aug 14 09:51:17 ICT 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class NotifikasiCfgImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        IdNotifikasi {
            public Object get(NotifikasiCfgImpl obj) {
                return obj.getIdNotifikasi();
            }

            public void put(NotifikasiCfgImpl obj, Object value) {
                obj.setIdNotifikasi((DBSequence)value);
            }
        }
        ,
        NamaNotifikasi {
            public Object get(NotifikasiCfgImpl obj) {
                return obj.getNamaNotifikasi();
            }

            public void put(NotifikasiCfgImpl obj, Object value) {
                obj.setNamaNotifikasi((String)value);
            }
        }
        ,
        Descr {
            public Object get(NotifikasiCfgImpl obj) {
                return obj.getDescr();
            }

            public void put(NotifikasiCfgImpl obj, Object value) {
                obj.setDescr((String)value);
            }
        }
        ,
        MailTemplateNm {
            public Object get(NotifikasiCfgImpl obj) {
                return obj.getMailTemplateNm();
            }

            public void put(NotifikasiCfgImpl obj, Object value) {
                obj.setMailTemplateNm((String)value);
            }
        }
        ,
        NotificationType {
            public Object get(NotifikasiCfgImpl obj) {
                return obj.getNotificationType();
            }

            public void put(NotifikasiCfgImpl obj, Object value) {
                obj.setNotificationType((String)value);
            }
        }
        ,
        NotifikasiPosition {
            public Object get(NotifikasiCfgImpl obj) {
                return obj.getNotifikasiPosition();
            }

            public void put(NotifikasiCfgImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(NotifikasiCfgImpl object);

        public abstract void put(NotifikasiCfgImpl object, Object value);

        public int index() {
            return NotifikasiCfgImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return NotifikasiCfgImpl.AttributesEnum.firstIndex() + NotifikasiCfgImpl.AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = NotifikasiCfgImpl.AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int IDNOTIFIKASI = AttributesEnum.IdNotifikasi.index();
    public static final int NAMANOTIFIKASI = AttributesEnum.NamaNotifikasi.index();
    public static final int DESCR = AttributesEnum.Descr.index();
    public static final int MAILTEMPLATENM = AttributesEnum.MailTemplateNm.index();
    public static final int NOTIFICATIONTYPE = AttributesEnum.NotificationType.index();
    public static final int NOTIFIKASIPOSITION = AttributesEnum.NotifikasiPosition.index();

    /**
     * This is the default constructor (do not remove).
     */
    public NotifikasiCfgImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("app.mkp.model.entity.notification.config.NotifikasiCfg");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for IdNotifikasi, using the alias name IdNotifikasi.
     * @return the IdNotifikasi
     */
    public DBSequence getIdNotifikasi() {
        return (DBSequence)getAttributeInternal(IDNOTIFIKASI);
    }

    /**
     * Sets <code>value</code> as the attribute value for IdNotifikasi.
     * @param value value to set the IdNotifikasi
     */
    public void setIdNotifikasi(DBSequence value) {
        setAttributeInternal(IDNOTIFIKASI, value);
    }

    /**
     * Gets the attribute value for NamaNotifikasi, using the alias name NamaNotifikasi.
     * @return the NamaNotifikasi
     */
    public String getNamaNotifikasi() {
        return (String)getAttributeInternal(NAMANOTIFIKASI);
    }

    /**
     * Sets <code>value</code> as the attribute value for NamaNotifikasi.
     * @param value value to set the NamaNotifikasi
     */
    public void setNamaNotifikasi(String value) {
        setAttributeInternal(NAMANOTIFIKASI, value);
    }

    /**
     * Gets the attribute value for Descr, using the alias name Descr.
     * @return the Descr
     */
    public String getDescr() {
        return (String)getAttributeInternal(DESCR);
    }

    /**
     * Sets <code>value</code> as the attribute value for Descr.
     * @param value value to set the Descr
     */
    public void setDescr(String value) {
        setAttributeInternal(DESCR, value);
    }

    /**
     * Gets the attribute value for MailTemplateNm, using the alias name MailTemplateNm.
     * @return the MailTemplateNm
     */
    public String getMailTemplateNm() {
        return (String)getAttributeInternal(MAILTEMPLATENM);
    }

    /**
     * Sets <code>value</code> as the attribute value for MailTemplateNm.
     * @param value value to set the MailTemplateNm
     */
    public void setMailTemplateNm(String value) {
        setAttributeInternal(MAILTEMPLATENM, value);
    }

    /**
     * Gets the attribute value for NotificationType, using the alias name NotificationType.
     * @return the NotificationType
     */
    public String getNotificationType() {
        return (String)getAttributeInternal(NOTIFICATIONTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for NotificationType.
     * @param value value to set the NotificationType
     */
    public void setNotificationType(String value) {
        setAttributeInternal(NOTIFICATIONTYPE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getNotifikasiPosition() {
        return (RowIterator)getAttributeInternal(NOTIFIKASIPOSITION);
    }


    /**
     * @param idNotifikasi key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(DBSequence idNotifikasi) {
        return new Key(new Object[]{idNotifikasi});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
     protected void create(AttributeList attributeList) {
             super.create(attributeList);
             SequenceImpl seq = new SequenceImpl("NOTIFIKASI_CFG_SEQ", getDBTransaction());
             this.setIdNotifikasi(new DBSequence(seq.getSequenceNumber()));
     }
}
