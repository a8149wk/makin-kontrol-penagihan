package app.mkp.model.entity.notification.mail;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jun 14 10:22:40 ICT 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MailTemplateImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        MailId {
            public Object get(MailTemplateImpl obj) {
                return obj.getMailId();
            }

            public void put(MailTemplateImpl obj, Object value) {
                obj.setMailId((DBSequence)value);
            }
        }
        ,
        MailNm {
            public Object get(MailTemplateImpl obj) {
                return obj.getMailNm();
            }

            public void put(MailTemplateImpl obj, Object value) {
                obj.setMailNm((String)value);
            }
        }
        ,
        MailDescr {
            public Object get(MailTemplateImpl obj) {
                return obj.getMailDescr();
            }

            public void put(MailTemplateImpl obj, Object value) {
                obj.setMailDescr((String)value);
            }
        }
        ,
        MailSubject {
            public Object get(MailTemplateImpl obj) {
                return obj.getMailSubject();
            }

            public void put(MailTemplateImpl obj, Object value) {
                obj.setMailSubject((String)value);
            }
        }
        ,
        MailBody {
            public Object get(MailTemplateImpl obj) {
                return obj.getMailBody();
            }

            public void put(MailTemplateImpl obj, Object value) {
                obj.setMailBody((String)value);
            }
        }
        ,
        MailSql {
            public Object get(MailTemplateImpl obj) {
                return obj.getMailSql();
            }

            public void put(MailTemplateImpl obj, Object value) {
                obj.setMailSql((String)value);
            }
        }
        ,
        MailType {
            public Object get(MailTemplateImpl obj) {
                return obj.getMailType();
            }

            public void put(MailTemplateImpl obj, Object value) {
                obj.setMailType((String)value);
            }
        }
        ,
        MailInputParam {
            public Object get(MailTemplateImpl obj) {
                return obj.getMailInputParam();
            }

            public void put(MailTemplateImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(MailTemplateImpl object);

        public abstract void put(MailTemplateImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int MAILID = AttributesEnum.MailId.index();
    public static final int MAILNM = AttributesEnum.MailNm.index();
    public static final int MAILDESCR = AttributesEnum.MailDescr.index();
    public static final int MAILSUBJECT = AttributesEnum.MailSubject.index();
    public static final int MAILBODY = AttributesEnum.MailBody.index();
    public static final int MAILSQL = AttributesEnum.MailSql.index();
    public static final int MAILTYPE = AttributesEnum.MailType.index();
    public static final int MAILINPUTPARAM = AttributesEnum.MailInputParam.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MailTemplateImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("app.mkp.model.entity.notification.mail.MailTemplate");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for MailId, using the alias name MailId.
     * @return the MailId
     */
    public DBSequence getMailId() {
        return (DBSequence)getAttributeInternal(MAILID);
    }

    /**
     * Sets <code>value</code> as the attribute value for MailId.
     * @param value value to set the MailId
     */
    public void setMailId(DBSequence value) {
        setAttributeInternal(MAILID, value);
    }

    /**
     * Gets the attribute value for MailNm, using the alias name MailNm.
     * @return the MailNm
     */
    public String getMailNm() {
        return (String)getAttributeInternal(MAILNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for MailNm.
     * @param value value to set the MailNm
     */
    public void setMailNm(String value) {
        setAttributeInternal(MAILNM, value);
    }

    /**
     * Gets the attribute value for MailDescr, using the alias name MailDescr.
     * @return the MailDescr
     */
    public String getMailDescr() {
        return (String)getAttributeInternal(MAILDESCR);
    }

    /**
     * Sets <code>value</code> as the attribute value for MailDescr.
     * @param value value to set the MailDescr
     */
    public void setMailDescr(String value) {
        setAttributeInternal(MAILDESCR, value);
    }

    /**
     * Gets the attribute value for MailSubject, using the alias name MailSubject.
     * @return the MailSubject
     */
    public String getMailSubject() {
        return (String)getAttributeInternal(MAILSUBJECT);
    }

    /**
     * Sets <code>value</code> as the attribute value for MailSubject.
     * @param value value to set the MailSubject
     */
    public void setMailSubject(String value) {
        setAttributeInternal(MAILSUBJECT, value);
    }

    /**
     * Gets the attribute value for MailBody, using the alias name MailBody.
     * @return the MailBody
     */
    public String getMailBody() {
        return (String)getAttributeInternal(MAILBODY);
    }

    /**
     * Sets <code>value</code> as the attribute value for MailBody.
     * @param value value to set the MailBody
     */
    public void setMailBody(String value) {
        setAttributeInternal(MAILBODY, value);
    }

    /**
     * Gets the attribute value for MailSql, using the alias name MailSql.
     * @return the MailSql
     */
    public String getMailSql() {
        return (String)getAttributeInternal(MAILSQL);
    }

    /**
     * Sets <code>value</code> as the attribute value for MailSql.
     * @param value value to set the MailSql
     */
    public void setMailSql(String value) {
        setAttributeInternal(MAILSQL, value);
    }

    /**
     * Gets the attribute value for MailType, using the alias name MailType.
     * @return the MailType
     */
    public String getMailType() {
        return (String)getAttributeInternal(MAILTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for MailType.
     * @param value value to set the MailType
     */
    public void setMailType(String value) {
        setAttributeInternal(MAILTYPE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMailInputParam() {
        return (RowIterator)getAttributeInternal(MAILINPUTPARAM);
    }


    /**
     * @param mailId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(DBSequence mailId) {
        return new Key(new Object[]{mailId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
     protected void create(AttributeList attributeList) {
             super.create(attributeList);
             SequenceImpl seq = new SequenceImpl("MAIL_TEMPLATE_SEQ", getDBTransaction());
             this.setMailId(new DBSequence(seq.getSequenceNumber()));
     }
}
